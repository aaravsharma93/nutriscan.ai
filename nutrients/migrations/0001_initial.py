# Generated by Django 3.2.5 on 2021-07-30 09:44

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NutrientsListTable',
            fields=[
                ('nutrient', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('nutrient_name', models.CharField(max_length=20, verbose_name='Nutrient Name')),
                ('nutrient_type', models.CharField(blank=True, max_length=20, verbose_name='Nutrient Type')),
                ('group', models.CharField(blank=True, max_length=20)),
                ('benifits', models.TextField(blank=True, null=True, verbose_name='Benifits')),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Nutrients List Table',
                'db_table': 'Nutrients',
            },
        ),
        migrations.CreateModel(
            name='UserTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=64, unique=True)),
                ('email', models.EmailField(max_length=50)),
                ('first_name', models.CharField(max_length=25)),
                ('last_name', models.CharField(blank=True, max_length=25, null=True)),
                ('password', models.CharField(max_length=32)),
                ('creation_date', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Registered Users Table',
                'db_table': 'UsersTable',
            },
        ),
        migrations.CreateModel(
            name='UserFamilyMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_name', models.CharField(max_length=50)),
                ('age', models.IntegerField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=10)),
                ('pregnant', models.BooleanField(default=False)),
                ('breastfeeding', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrients.usertable')),
            ],
        ),
        migrations.CreateModel(
            name='DataTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nutrient_name', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=10)),
                ('pregnant', models.BooleanField(default=False)),
                ('breastfeeding', models.BooleanField(default=False)),
                ('age', models.PositiveIntegerField()),
                ('nutrition_value', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('unit', models.CharField(choices=[('microgram', 'mcg'), ('milligram', 'mg'), ('gram', 'g'), ('kilo-calorie', 'kcal'), ('litres', 'l')], max_length=20)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('nutrient', models.ForeignKey(max_length=30, on_delete=django.db.models.deletion.CASCADE, to='nutrients.nutrientslisttable')),
            ],
            options={
                'verbose_name': 'Data Table',
                'db_table': 'Data_Table',
            },
        ),
        migrations.CreateModel(
            name='DailyAllowanceSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nutrient_name', models.CharField(max_length=100)),
                ('f_0_6m', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='F 0-.5')),
                ('m_0_6m', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='M 0-.5')),
                ('f_6m_1', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='F .5-1')),
                ('m_6m_1', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='M .5-1')),
                ('f_1_3', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='F 1-3')),
                ('m_1_3', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='M 1-3')),
                ('f_4_8', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='F 4-8')),
                ('m_4_8', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='M 4-8')),
                ('f_9_13', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='F 9-13')),
                ('m_9_13', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='M 9-13')),
                ('f_14_18', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='F 14-18')),
                ('m_14_18', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='M 14-18')),
                ('f_19_50', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='F 19-50')),
                ('m_19_50', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='M 19-50')),
                ('f_50', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='F 50+')),
                ('m_50', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='M 50+')),
                ('breastfeeding', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('pregnant', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('maximum_doses', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Max doses M+F')),
                ('unit', models.CharField(choices=[('microgram', 'mcg'), ('milligram', 'mg'), ('gram', 'g'), ('kilo-calorie', 'kcal'), ('litres', 'l')], max_length=20)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('nutrient', models.ForeignKey(default=None, max_length=30, null=True, on_delete=django.db.models.deletion.CASCADE, to='nutrients.nutrientslisttable')),
            ],
            options={
                'verbose_name': 'Daily Allowance Sheet',
                'db_table': 'Daily_Allowance_Sheet',
            },
        ),
    ]
